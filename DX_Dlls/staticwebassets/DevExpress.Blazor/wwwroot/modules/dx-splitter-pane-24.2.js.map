{"version":3,"file":"dx-splitter-pane-24.2.js","sources":["../../Scripts/layout/splitter/dx-splitter-pane.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\r\nimport SingleSlotElementBase from \"../../common/single-slot-element-base\";\r\nimport { customElement, property } from \"lit/decorators.js\";\r\nimport { DxTagNames } from \"../../dx-tag-names\";\r\nlet DxSplitterPane = class DxSplitterPane extends SingleSlotElementBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.forceIsFlexible = false;\r\n        this.minSize = null;\r\n        this.maxSize = null;\r\n    }\r\n    get size() {\r\n        return this.style.flexBasis;\r\n    }\r\n    set size(size) {\r\n        if (this.forceIsFlexible)\r\n            size = \"\";\r\n        this.style.flex = size ? `0 0 ${size}` : \"\";\r\n    }\r\n    updated(props) {\r\n        super.updated(props);\r\n        if (props.has(\"forceIsFlexible\")) {\r\n            if (this.forceIsFlexible)\r\n                this.size = \"\";\r\n        }\r\n    }\r\n};\r\n__decorate([\r\n    property({ type: Boolean, attribute: \"force-flexible\" })\r\n], DxSplitterPane.prototype, \"forceIsFlexible\", void 0);\r\n__decorate([\r\n    property({ type: String, attribute: \"min-size\" })\r\n], DxSplitterPane.prototype, \"minSize\", void 0);\r\n__decorate([\r\n    property({ type: String, attribute: \"max-size\" })\r\n], DxSplitterPane.prototype, \"maxSize\", void 0);\r\nDxSplitterPane = __decorate([\r\n    customElement(DxTagNames.SplitterPane)\r\n], DxSplitterPane);\r\nexport { DxSplitterPane };\r\n"],"names":["property","customElement"],"mappings":";;;;;;;;;;;;;;;;AAIG,IAAC,cAAc,GAAG,MAAM,cAAc,SAAS,qBAAqB,CAAC;AACxE,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACrC,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B,KAAK;AACL,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;AACpC,KAAK;AACL,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB,QAAQ,IAAI,IAAI,CAAC,eAAe;AAChC,YAAY,IAAI,GAAG,EAAE,CAAC;AACtB,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;AACpD,KAAK;AACL,IAAI,OAAO,CAAC,KAAK,EAAE;AACnB,QAAQ,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAQ,IAAI,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,EAAE;AAC1C,YAAY,IAAI,IAAI,CAAC,eAAe;AACpC,gBAAgB,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAC/B,SAAS;AACT,KAAK;AACL,EAAE;AACF,UAAU,CAAC;AACX,IAAIA,CAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;AAC5D,CAAC,EAAE,cAAc,CAAC,SAAS,EAAE,iBAAiB,EAAE,KAAK,CAAC,CAAC,CAAC;AACxD,UAAU,CAAC;AACX,IAAIA,CAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;AACrD,CAAC,EAAE,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,UAAU,CAAC;AACX,IAAIA,CAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC;AACrD,CAAC,EAAE,cAAc,CAAC,SAAS,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;AAChD,cAAc,GAAG,UAAU,CAAC;AAC5B,IAAIC,CAAa,CAAC,UAAU,CAAC,YAAY,CAAC;AAC1C,CAAC,EAAE,cAAc,CAAC;;;;"}
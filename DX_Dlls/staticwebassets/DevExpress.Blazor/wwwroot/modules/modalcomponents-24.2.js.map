{"version":3,"file":"modalcomponents-24.2.js","sources":["../../Scripts/popup/modalroot.ts","../../Scripts/popup/modalcomponents.ts"],"sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { dxModalTagName } from \"./modal\";\r\nimport { html, LitElement } from \"lit\";\r\nimport { customElement } from \"lit/decorators.js\";\r\nimport { DxModalDialog } from \"./modaldialog\";\r\nexport const dxModalRootTagName = \"dxbl-modal-root\";\r\nlet DxModalRoot = class DxModalRoot extends LitElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.slotChangedHandler = this.handleSlotChange.bind(this);\r\n    }\r\n    render() {\r\n        return html `\r\n            <slot @slotchange=${this.slotChangedHandler}></slot>\r\n        `;\r\n    }\r\n    handleSlotChange(e) {\r\n        const slot = e.target;\r\n        const elements = slot.assignedNodes();\r\n        const dialog = elements.find(x => x instanceof DxModalDialog);\r\n        const modal = this.closest(dxModalTagName);\r\n        if (modal) {\r\n            if (dialog) {\r\n                modal.notifyDialogConnected(dialog);\r\n                modal.notifyRootConnected();\r\n            }\r\n            else {\r\n                modal.notifyDialogDisconnected();\r\n                modal.notifyRootDisconnected();\r\n            }\r\n        }\r\n    }\r\n};\r\nDxModalRoot = __decorate([\r\n    customElement(dxModalRootTagName)\r\n], DxModalRoot);\r\nexport { DxModalRoot };\r\nexport default { DxModalRoot, dxModalRootTagName };\r\n","import { dxModalDialogTagName } from \"./modaldialog\";\r\nimport { dxModalTagName } from \"./modal\";\r\nimport { dxPopupRootTagName } from \"./constants\";\r\nimport { DxPopupPortalTagName } from \"./popupportal\";\r\nimport { dxModalRootTagName } from \"./modalroot\";\r\nimport { popupResizableContainerTagName } from \"./dxbl-popup-resizable-container\";\r\nexport const registeredComponents = [popupResizableContainerTagName, dxModalDialogTagName, dxModalTagName, dxModalRootTagName, dxPopupRootTagName, DxPopupPortalTagName];\r\nexport function getReference(elementReference) {\r\n    if (!elementReference)\r\n        throw new Error(\"failed\");\r\n    return elementReference;\r\n}\r\nexport default { getReference, registeredComponents };\r\n"],"names":["LitElement","html","customElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKO,MAAM,kBAAkB,GAAG,iBAAiB,CAAC;AACpD,IAAI,WAAW,GAAG,MAAM,WAAW,SAASA,CAAU,CAAC;AACvD,IAAI,WAAW,GAAG;AAClB,QAAQ,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;AAC5B,QAAQ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnE,KAAK;AACL,IAAI,MAAM,GAAG;AACb,QAAQ,OAAOC,CAAI,CAAC,CAAC;AACrB,8BAA8B,EAAE,IAAI,CAAC,kBAAkB,CAAC;AACxD,QAAQ,CAAC,CAAC;AACV,KAAK;AACL,IAAI,gBAAgB,CAAC,CAAC,EAAE;AACxB,QAAQ,MAAM,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC;AAC9B,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC9C,QAAQ,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,aAAa,CAAC,CAAC;AACtE,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;AACnD,QAAQ,IAAI,KAAK,EAAE;AACnB,YAAY,IAAI,MAAM,EAAE;AACxB,gBAAgB,KAAK,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACpD,gBAAgB,KAAK,CAAC,mBAAmB,EAAE,CAAC;AAC5C,aAAa;AACb,iBAAiB;AACjB,gBAAgB,KAAK,CAAC,wBAAwB,EAAE,CAAC;AACjD,gBAAgB,KAAK,CAAC,sBAAsB,EAAE,CAAC;AAC/C,aAAa;AACb,SAAS;AACT,KAAK;AACL,CAAC,CAAC;AACF,WAAW,GAAG,UAAU,CAAC;AACzB,IAAIC,CAAa,CAAC,kBAAkB,CAAC;AACrC,CAAC,EAAE,WAAW,CAAC;;AC7BH,MAAC,oBAAoB,GAAG,CAAC,8BAA8B,EAAE,oBAAoB,EAAE,cAAc,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE;AAClK,SAAS,YAAY,CAAC,gBAAgB,EAAE;AAC/C,IAAI,IAAI,CAAC,gBAAgB;AACzB,QAAQ,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;AAClC,IAAI,OAAO,gBAAgB,CAAC;AAC5B,CAAC;AACD,wBAAe,EAAE,YAAY,EAAE,oBAAoB,EAAE;;;;"}
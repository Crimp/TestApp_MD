{"version":3,"file":"grid-scroll-utils-24.2.js","sources":["../../Scripts/grid/keyboard-navigation/grid-scroll-utils.ts"],"sourcesContent":["import ScreenHelper from \"../../utils/screenhelper\";\r\nimport { Rect, RectHelper } from \"../../utils/rect\";\r\nimport { DxScrollViewer, VerticalAlign } from \"../../scroll-viewer/dx-scroll-viewer\";\r\nexport class GridScrollUtils {\r\n    static calculateHorizontalScrollCorrection(element, fixedCells, isLeftFixedPosition) {\r\n        let result = 0;\r\n        const itemBounds = element.getBoundingClientRect();\r\n        for (const cell of fixedCells) {\r\n            const fixedBounds = cell.getBoundingClientRect();\r\n            const intersection = this.getIntersectionRectangle(itemBounds, fixedBounds);\r\n            if (!intersection.isEmpty) {\r\n                const offset = isLeftFixedPosition ? intersection.left - fixedBounds.right : intersection.right - fixedBounds.left;\r\n                itemBounds.x -= offset;\r\n                result += offset;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    static calculateVerticalScrollCorrection(element, scrollViewer) {\r\n        const offsetTop = this.calculateHeightOffsetValue(element, scrollViewer, true);\r\n        const offsetBottom = this.calculateHeightOffsetValue(element, scrollViewer, false);\r\n        if (offsetTop < 0 && offsetBottom < 0)\r\n            return offsetTop;\r\n        if (offsetBottom > 0 && offsetTop > 0)\r\n            return offsetBottom;\r\n        return 0;\r\n    }\r\n    static calculateBoundaryItemIndex(strategy, scrollViewer, isForward) {\r\n        const viewPortHeight = Math.ceil(this.getDataAreaViewportHeight(scrollViewer));\r\n        const boundaryIndex = isForward ? 0 : strategy.itemCount - 1;\r\n        const isOutOfBoundary = isForward && strategy.selectedItemIndex <= boundaryIndex || !isForward && strategy.selectedItemIndex >= boundaryIndex;\r\n        let index = isOutOfBoundary ? boundaryIndex : strategy.selectedItemIndex;\r\n        let height = this.calculateItemHeight(strategy, scrollViewer, index, isForward);\r\n        // TODO: DxVirtualScrollViewer.averageHeight is not reliable - it doesn't count footer rows\r\n        const defaultItemHeight = this.isVirtualScrollingEnabled(scrollViewer) ? this.calculateItemAverageHeight(strategy) : undefined;\r\n        const indexOffset = isForward ? 1 : -1;\r\n        let curIndex = index + indexOffset;\r\n        while (strategy.isIndexWithinBoundaries(curIndex)) {\r\n            height += this.getElementHeight(strategy.getItem(curIndex), defaultItemHeight);\r\n            if (height > viewPortHeight && index !== strategy.selectedItemIndex)\r\n                break;\r\n            index = curIndex;\r\n            curIndex += indexOffset;\r\n        }\r\n        return index;\r\n    }\r\n    static isVirtualScrollingEnabled(scrollViewer) {\r\n        return scrollViewer.totalItemCount !== undefined;\r\n    }\r\n    static isElementInView(element, scrollViewer) {\r\n        const scrollViewerClientRect = scrollViewer.getBoundingClientRect();\r\n        const rowClientRect = element.getBoundingClientRect();\r\n        return rowClientRect.bottom > (scrollViewerClientRect.top + rowClientRect.height) && rowClientRect.top < scrollViewerClientRect.bottom;\r\n    }\r\n    static bottomAlignmentRequired(element, scrollViewer) {\r\n        const elementClientRect = element.getBoundingClientRect();\r\n        return (scrollViewer.getBoundingClientRect().bottom - elementClientRect.bottom) < elementClientRect.height;\r\n    }\r\n    static calculateItemAverageHeight(strategy) {\r\n        const firstItem = strategy.getItem(0);\r\n        const lastItem = strategy.getItem(strategy.itemCount - 1);\r\n        return (lastItem.getBoundingClientRect().bottom - firstItem.getBoundingClientRect().top) / strategy.itemCount;\r\n    }\r\n    static calculateItemHeight(strategy, scrollViewer, index, isForward) {\r\n        const itemElement = strategy.getItem(index);\r\n        let height = this.getElementHeight(itemElement);\r\n        if (itemElement && !this.isOutsideViewportItemRequired(strategy, scrollViewer, index, isForward)) {\r\n            const offset = this.calculateHeightOffsetValue(itemElement, scrollViewer, isForward);\r\n            height += isForward ? offset : -offset;\r\n        }\r\n        return height;\r\n    }\r\n    static isOutsideViewportItemRequired(strategy, scrollViewer, index, isForward) {\r\n        const siblingItemIndex = isForward ? index + 1 : index - 1;\r\n        const siblingItem = strategy.getItem(siblingItemIndex);\r\n        if (!siblingItem)\r\n            return true;\r\n        const siblingBounds = siblingItem.getBoundingClientRect();\r\n        const siblingHeight = this.getElementHeight(siblingItem);\r\n        if (!scrollViewer.hasVerticalScrollBar) {\r\n            const viewportBounds = ScreenHelper.viewport();\r\n            const viewportRect = new Rect(0, 0, viewportBounds.width, viewportBounds.height);\r\n            const intersection = this.getIntersectionRectangle(siblingBounds, viewportRect);\r\n            return intersection.height < siblingHeight;\r\n        }\r\n        const footerRect = scrollViewer.getElementsRectangle(scrollViewer.getFooterElements());\r\n        if (isForward && footerRect)\r\n            return !this.getIntersectionRectangle(siblingBounds, footerRect).isEmpty;\r\n        const headerRect = scrollViewer.getElementsRectangle(scrollViewer.getHeaderElements());\r\n        if (!isForward && headerRect)\r\n            return !this.getIntersectionRectangle(siblingBounds, headerRect).isEmpty;\r\n        const visibleRect = this.getIntersectionRectangle(siblingBounds, scrollViewer.getBoundingClientRect());\r\n        return visibleRect.height < siblingHeight;\r\n    }\r\n    static calculateHeightOffsetValue(selectedItemElement, scrollViewer, isForward) {\r\n        const targetRect = selectedItemElement.getBoundingClientRect();\r\n        const dataAreaRect = scrollViewer.getDataAreaRectangle();\r\n        const useDocumentBounds = !scrollViewer.hasVerticalScrollBar;\r\n        const containerTop = useDocumentBounds ? 0 : dataAreaRect.y;\r\n        const containerBottom = useDocumentBounds ? document.documentElement.clientHeight : containerTop + dataAreaRect.height;\r\n        const align = isForward ? VerticalAlign.Top : VerticalAlign.Bottom;\r\n        return DxScrollViewer.calcScrollOffset(containerTop, containerBottom, targetRect.top, targetRect.bottom, align);\r\n    }\r\n    static getDataAreaViewportHeight(scrollViewer) {\r\n        const scrollViewerRect = scrollViewer.getRectangle();\r\n        const viewPort = scrollViewer.hasVerticalScrollBar ? scrollViewer.getDataAreaRectangle() : ScreenHelper.viewport();\r\n        if (scrollViewer.hasVerticalScrollBar && scrollViewerRect && scrollViewerRect.height < viewPort.height)\r\n            return scrollViewerRect.height - this.calcStickyElementsHeight(scrollViewer);\r\n        return viewPort.height;\r\n    }\r\n    static calcStickyElementsHeight(scrollViewer) {\r\n        let height = 0;\r\n        for (const el of this.getStickyElementsRectangles(scrollViewer))\r\n            height += this.getElementRectangleHeight(el);\r\n        return height;\r\n    }\r\n    static getStickyElementsRectangles(scrollViewer) {\r\n        if (scrollViewer)\r\n            return [scrollViewer.getElementsRectangle(scrollViewer.getHeaderElements()), scrollViewer.getElementsRectangle(scrollViewer.getFooterElements())];\r\n        return [];\r\n    }\r\n    static getElementHeight(element, defaultHeight = 0) {\r\n        return element ? element.getBoundingClientRect().height : defaultHeight;\r\n    }\r\n    static getElementRectangleHeight(element, defaultHeight = 0) {\r\n        return element ? element.height : defaultHeight;\r\n    }\r\n    static getIntersectionRectangle(elementBounds, serviceElementBounds) {\r\n        const elementRectangle = new Rect(elementBounds.x, elementBounds.y, elementBounds.width, elementBounds.height);\r\n        const serviceElementRectangle = new Rect(serviceElementBounds.x, serviceElementBounds.y, serviceElementBounds.width, serviceElementBounds.height);\r\n        return RectHelper.intersect(elementRectangle, serviceElementRectangle);\r\n    }\r\n    static alignElementVertically(element, scrollViewer, scrollContainer) {\r\n        const verticalCorrection = GridScrollUtils.calculateVerticalScrollCorrection(element, scrollViewer);\r\n        scrollContainer.scrollBy(0, verticalCorrection);\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAGO,MAAM,eAAe,CAAC;AAC7B,IAAI,OAAO,mCAAmC,CAAC,OAAO,EAAE,UAAU,EAAE,mBAAmB,EAAE;AACzF,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC;AACvB,QAAQ,MAAM,UAAU,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;AAC3D,QAAQ,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE;AACvC,YAAY,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAC7D,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AACxF,YAAY,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AACvC,gBAAgB,MAAM,MAAM,GAAG,mBAAmB,GAAG,YAAY,CAAC,IAAI,GAAG,WAAW,CAAC,KAAK,GAAG,YAAY,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;AACnI,gBAAgB,UAAU,CAAC,CAAC,IAAI,MAAM,CAAC;AACvC,gBAAgB,MAAM,IAAI,MAAM,CAAC;AACjC,aAAa;AACb,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,iCAAiC,CAAC,OAAO,EAAE,YAAY,EAAE;AACpE,QAAQ,MAAM,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;AACvF,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;AAC3F,QAAQ,IAAI,SAAS,GAAG,CAAC,IAAI,YAAY,GAAG,CAAC;AAC7C,YAAY,OAAO,SAAS,CAAC;AAC7B,QAAQ,IAAI,YAAY,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC;AAC7C,YAAY,OAAO,YAAY,CAAC;AAChC,QAAQ,OAAO,CAAC,CAAC;AACjB,KAAK;AACL,IAAI,OAAO,0BAA0B,CAAC,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE;AACzE,QAAQ,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,CAAC,CAAC;AACvF,QAAQ,MAAM,aAAa,GAAG,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;AACrE,QAAQ,MAAM,eAAe,GAAG,SAAS,IAAI,QAAQ,CAAC,iBAAiB,IAAI,aAAa,IAAI,CAAC,SAAS,IAAI,QAAQ,CAAC,iBAAiB,IAAI,aAAa,CAAC;AACtJ,QAAQ,IAAI,KAAK,GAAG,eAAe,GAAG,aAAa,GAAG,QAAQ,CAAC,iBAAiB,CAAC;AACjF,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AACxF;AACA,QAAQ,MAAM,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;AACvI,QAAQ,MAAM,WAAW,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/C,QAAQ,IAAI,QAAQ,GAAG,KAAK,GAAG,WAAW,CAAC;AAC3C,QAAQ,OAAO,QAAQ,CAAC,uBAAuB,CAAC,QAAQ,CAAC,EAAE;AAC3D,YAAY,MAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,iBAAiB,CAAC,CAAC;AAC3F,YAAY,IAAI,MAAM,GAAG,cAAc,IAAI,KAAK,KAAK,QAAQ,CAAC,iBAAiB;AAC/E,gBAAgB,MAAM;AACtB,YAAY,KAAK,GAAG,QAAQ,CAAC;AAC7B,YAAY,QAAQ,IAAI,WAAW,CAAC;AACpC,SAAS;AACT,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,IAAI,OAAO,yBAAyB,CAAC,YAAY,EAAE;AACnD,QAAQ,OAAO,YAAY,CAAC,cAAc,KAAK,SAAS,CAAC;AACzD,KAAK;AACL,IAAI,OAAO,eAAe,CAAC,OAAO,EAAE,YAAY,EAAE;AAClD,QAAQ,MAAM,sBAAsB,GAAG,YAAY,CAAC,qBAAqB,EAAE,CAAC;AAC5E,QAAQ,MAAM,aAAa,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;AAC9D,QAAQ,OAAO,aAAa,CAAC,MAAM,IAAI,sBAAsB,CAAC,GAAG,GAAG,aAAa,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,GAAG,GAAG,sBAAsB,CAAC,MAAM,CAAC;AAC/I,KAAK;AACL,IAAI,OAAO,uBAAuB,CAAC,OAAO,EAAE,YAAY,EAAE;AAC1D,QAAQ,MAAM,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;AAClE,QAAQ,OAAO,CAAC,YAAY,CAAC,qBAAqB,EAAE,CAAC,MAAM,GAAG,iBAAiB,CAAC,MAAM,IAAI,iBAAiB,CAAC,MAAM,CAAC;AACnH,KAAK;AACL,IAAI,OAAO,0BAA0B,CAAC,QAAQ,EAAE;AAChD,QAAQ,MAAM,SAAS,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC9C,QAAQ,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;AAClE,QAAQ,OAAO,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC;AACtH,KAAK;AACL,IAAI,OAAO,mBAAmB,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE;AACzE,QAAQ,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACpD,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACxD,QAAQ,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,6BAA6B,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,CAAC,EAAE;AAC1G,YAAY,MAAM,MAAM,GAAG,IAAI,CAAC,0BAA0B,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC;AACjG,YAAY,MAAM,IAAI,SAAS,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC;AACnD,SAAS;AACT,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,6BAA6B,CAAC,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,SAAS,EAAE;AACnF,QAAQ,MAAM,gBAAgB,GAAG,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;AACnE,QAAQ,MAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAC/D,QAAQ,IAAI,CAAC,WAAW;AACxB,YAAY,OAAO,IAAI,CAAC;AACxB,QAAQ,MAAM,aAAa,GAAG,WAAW,CAAC,qBAAqB,EAAE,CAAC;AAClE,QAAQ,MAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;AACjE,QAAQ,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE;AAChD,YAAY,MAAM,cAAc,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;AAC3D,YAAY,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,cAAc,CAAC,KAAK,EAAE,cAAc,CAAC,MAAM,CAAC,CAAC;AAC7F,YAAY,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;AAC5F,YAAY,OAAO,YAAY,CAAC,MAAM,GAAG,aAAa,CAAC;AACvD,SAAS;AACT,QAAQ,MAAM,UAAU,GAAG,YAAY,CAAC,oBAAoB,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC/F,QAAQ,IAAI,SAAS,IAAI,UAAU;AACnC,YAAY,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC;AACrF,QAAQ,MAAM,UAAU,GAAG,YAAY,CAAC,oBAAoB,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC/F,QAAQ,IAAI,CAAC,SAAS,IAAI,UAAU;AACpC,YAAY,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC;AACrF,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,wBAAwB,CAAC,aAAa,EAAE,YAAY,CAAC,qBAAqB,EAAE,CAAC,CAAC;AAC/G,QAAQ,OAAO,WAAW,CAAC,MAAM,GAAG,aAAa,CAAC;AAClD,KAAK;AACL,IAAI,OAAO,0BAA0B,CAAC,mBAAmB,EAAE,YAAY,EAAE,SAAS,EAAE;AACpF,QAAQ,MAAM,UAAU,GAAG,mBAAmB,CAAC,qBAAqB,EAAE,CAAC;AACvE,QAAQ,MAAM,YAAY,GAAG,YAAY,CAAC,oBAAoB,EAAE,CAAC;AACjE,QAAQ,MAAM,iBAAiB,GAAG,CAAC,YAAY,CAAC,oBAAoB,CAAC;AACrE,QAAQ,MAAM,YAAY,GAAG,iBAAiB,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;AACpE,QAAQ,MAAM,eAAe,GAAG,iBAAiB,GAAG,QAAQ,CAAC,eAAe,CAAC,YAAY,GAAG,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC;AAC/H,QAAQ,MAAM,KAAK,GAAG,SAAS,GAAG,aAAa,CAAC,GAAG,GAAG,aAAa,CAAC,MAAM,CAAC;AAC3E,QAAQ,OAAO,cAAc,CAAC,gBAAgB,CAAC,YAAY,EAAE,eAAe,EAAE,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACxH,KAAK;AACL,IAAI,OAAO,yBAAyB,CAAC,YAAY,EAAE;AACnD,QAAQ,MAAM,gBAAgB,GAAG,YAAY,CAAC,YAAY,EAAE,CAAC;AAC7D,QAAQ,MAAM,QAAQ,GAAG,YAAY,CAAC,oBAAoB,GAAG,YAAY,CAAC,oBAAoB,EAAE,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;AAC3H,QAAQ,IAAI,YAAY,CAAC,oBAAoB,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM;AAC9G,YAAY,OAAO,gBAAgB,CAAC,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,CAAC;AACzF,QAAQ,OAAO,QAAQ,CAAC,MAAM,CAAC;AAC/B,KAAK;AACL,IAAI,OAAO,wBAAwB,CAAC,YAAY,EAAE;AAClD,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC;AACvB,QAAQ,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC;AACvE,YAAY,MAAM,IAAI,IAAI,CAAC,yBAAyB,CAAC,EAAE,CAAC,CAAC;AACzD,QAAQ,OAAO,MAAM,CAAC;AACtB,KAAK;AACL,IAAI,OAAO,2BAA2B,CAAC,YAAY,EAAE;AACrD,QAAQ,IAAI,YAAY;AACxB,YAAY,OAAO,CAAC,YAAY,CAAC,oBAAoB,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,EAAE,YAAY,CAAC,oBAAoB,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;AAC9J,QAAQ,OAAO,EAAE,CAAC;AAClB,KAAK;AACL,IAAI,OAAO,gBAAgB,CAAC,OAAO,EAAE,aAAa,GAAG,CAAC,EAAE;AACxD,QAAQ,OAAO,OAAO,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC,MAAM,GAAG,aAAa,CAAC;AAChF,KAAK;AACL,IAAI,OAAO,yBAAyB,CAAC,OAAO,EAAE,aAAa,GAAG,CAAC,EAAE;AACjE,QAAQ,OAAO,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,aAAa,CAAC;AACxD,KAAK;AACL,IAAI,OAAO,wBAAwB,CAAC,aAAa,EAAE,oBAAoB,EAAE;AACzE,QAAQ,MAAM,gBAAgB,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,CAAC;AACvH,QAAQ,MAAM,uBAAuB,GAAG,IAAI,IAAI,CAAC,oBAAoB,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC,EAAE,oBAAoB,CAAC,KAAK,EAAE,oBAAoB,CAAC,MAAM,CAAC,CAAC;AAC1J,QAAQ,OAAO,UAAU,CAAC,SAAS,CAAC,gBAAgB,EAAE,uBAAuB,CAAC,CAAC;AAC/E,KAAK;AACL,IAAI,OAAO,sBAAsB,CAAC,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE;AAC1E,QAAQ,MAAM,kBAAkB,GAAG,eAAe,CAAC,iCAAiC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;AAC5G,QAAQ,eAAe,CAAC,QAAQ,CAAC,CAAC,EAAE,kBAAkB,CAAC,CAAC;AACxD,KAAK;AACL;;;;"}
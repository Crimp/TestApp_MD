{"version":3,"file":"settings-24.2.js","sources":["../../Scripts/chart/cssClasses.ts","../../Scripts/chart/tooltip.ts","../../Scripts/chart/settings.ts"],"sourcesContent":["export const Chart = \"dxbl-chart\";\r\nexport const ChartRoot = \"dxbl-chart-root\";\r\nexport const ChartFirstLoading = \"dxbl-chart-first-loading\";\r\nexport const ChartLegend = \"dxbl-chart-legend\";\r\nexport const ChartLegendIcon = \"dxbl-chart-legend-icon\";\r\nexport const ChartLegendDefIcon = \"dxbl-chart-legend-def-icon\";\r\nexport const ChartLegendItem = \"dxbl-chart-legend-item\";\r\nexport const ChartTitle = \"dxbl-chart-title\";\r\nexport const ChartToolTip = \"dxbl-chart-tooltip\";\r\nexport const ChartToolTipPointer = \"dxbl-chart-tooltip-pointer\";\r\nconst chartCssVarPrefix = `--${Chart}`;\r\nexport class ChartCssVariables {\r\n}\r\nChartCssVariables.axisTitleFontColor = `${chartCssVarPrefix}-axis-title-font-color`;\r\nChartCssVariables.axisLineColor = `${chartCssVarPrefix}-axis-line-color`;\r\nChartCssVariables.constantLineColor = `${chartCssVarPrefix}-constant-line-color`;\r\nChartCssVariables.seriesPointHoverColor = `${chartCssVarPrefix}-point-hover-color`;\r\nChartCssVariables.errorBarColor = `${chartCssVarPrefix}-error-bar-color`;\r\nChartCssVariables.annotationColor = `${chartCssVarPrefix}-annotation-color`;\r\nChartCssVariables.annotationTextColor = `${chartCssVarPrefix}-annotation-text-color`;\r\n","import { DomUtils } from \"@devexpress/utils/lib/utils/dom\";\r\nimport { MathUtils } from \"@devexpress/utils/lib/utils/math\";\r\nimport { changeDom } from \"./../dom-utils\";\r\nimport * as ChartCssClasses from \"./cssClasses\";\r\nconst tooltipCssSelector = \".\" + ChartCssClasses.ChartToolTip;\r\nconst pointerCssSelector = \".\" + ChartCssClasses.ChartToolTipPointer;\r\nexport class ChartTooltipHelper {\r\n    constructor(owner) {\r\n        this.currentPointInfo = null;\r\n        this._owner = owner;\r\n    }\r\n    onTooltipHidden(evt) {\r\n        if (evt.isPointerOut)\r\n            this.hideTooltip(false);\r\n    }\r\n    onTooltipShown(evt, callback) {\r\n        const point = evt.target;\r\n        if (!point || !point.series)\r\n            return;\r\n        const id = MathUtils.generateGuid();\r\n        this.currentPointInfo = { chartPoint: point, x: evt.x, y: evt.y, id };\r\n        const pointData = { seriesIndex: point.series.index, data: point.data, tag: point.tag, id };\r\n        callback(pointData);\r\n    }\r\n    hideTooltip(clearHover) {\r\n        var _a, _b;\r\n        if (clearHover && ((_b = (_a = this.currentPointInfo) === null || _a === void 0 ? void 0 : _a.chartPoint) === null || _b === void 0 ? void 0 : _b.series))\r\n            this.currentPointInfo.chartPoint.clearHover();\r\n        const tooltip = this._owner.querySelector(tooltipCssSelector);\r\n        if (tooltip)\r\n            changeDom(() => tooltip.classList.remove(\"dxbl-visible\"));\r\n        this.currentPointInfo = null;\r\n    }\r\n    positionTooltip() {\r\n        if (!this.currentPointInfo)\r\n            return;\r\n        const x = this.currentPointInfo[\"x\"];\r\n        const y = this.currentPointInfo[\"y\"];\r\n        const rootElement = this._owner;\r\n        const chartContainer = rootElement.getWidgetElement();\r\n        const tooltip = rootElement === null || rootElement === void 0 ? void 0 : rootElement.querySelector(tooltipCssSelector);\r\n        if (!tooltip)\r\n            return;\r\n        const tooltipOffsetParent = tooltip.offsetParent;\r\n        const tooltipTop = y - DomUtils.getAbsolutePositionY(tooltipOffsetParent);\r\n        let tooltipLeft = x - DomUtils.getAbsolutePositionX(tooltipOffsetParent);\r\n        let pointerPositionDelta = 0;\r\n        const correctedLeft = this.getCorrectedTooltipLeft(tooltipLeft, tooltip, rootElement, chartContainer);\r\n        if (correctedLeft !== null) {\r\n            pointerPositionDelta = tooltipLeft - correctedLeft;\r\n            tooltipLeft = correctedLeft;\r\n        }\r\n        this.applyTooltipPosition(tooltipLeft, tooltipTop, pointerPositionDelta, tooltip);\r\n    }\r\n    getCorrectedTooltipLeft(left, tooltip, widgetElement, chartContainer) {\r\n        let result = null;\r\n        const halfWidth = tooltip.getBoundingClientRect().width / 2;\r\n        const chartContainerRect = chartContainer.getBoundingClientRect();\r\n        if (left < halfWidth) {\r\n            const chartContainerParent = chartContainer.offsetParent;\r\n            const chartContainerParentLeft = (chartContainerParent === null || chartContainerParent === void 0 ? void 0 : chartContainerParent.getBoundingClientRect().left) || 0;\r\n            const chartLeftPoint = chartContainerRect.left - chartContainerParentLeft;\r\n            result = chartLeftPoint + halfWidth;\r\n        }\r\n        else {\r\n            const chartRightPoint = (widgetElement.getBoundingClientRect().width + chartContainerRect.width) / 2;\r\n            if (left + halfWidth > chartRightPoint)\r\n                result = chartRightPoint - halfWidth;\r\n        }\r\n        return result;\r\n    }\r\n    applyTooltipPosition(left, top, pointerPositionDelta, tooltip) {\r\n        const pointer = tooltip.querySelector(pointerCssSelector);\r\n        const tooltipTopCss = `calc(${top}px - 0.625rem)`;\r\n        const tooltipLeftCss = `${left}px`;\r\n        const tootlipClassList = tooltip.classList;\r\n        const pointerLeftCss = pointerPositionDelta !== 0 ? `calc(50% + ${pointerPositionDelta}px)` : \"50%\";\r\n        changeDom(function () {\r\n            tooltip.style.top = tooltipTopCss;\r\n            tooltip.style.left = tooltipLeftCss;\r\n            pointer.style.left = pointerLeftCss;\r\n            if (!tootlipClassList.contains(\"dxbl-visible\"))\r\n                tootlipClassList.add(\"dxbl-visible\");\r\n        });\r\n    }\r\n}\r\nexport function getTooltipSettings(serverSettings) {\r\n    var _a, _b;\r\n    const hasTooltip = !!((_a = serverSettings.tooltip) === null || _a === void 0 ? void 0 : _a.enabled);\r\n    return {\r\n        enabled: false,\r\n        forceEvents: hasTooltip,\r\n        location: ((_b = serverSettings.tooltip) === null || _b === void 0 ? void 0 : _b.location) || undefined\r\n    };\r\n}\r\n","import { getTooltipSettings } from \"./tooltip\";\r\nexport class ChartSettingsConstants {\r\n}\r\nChartSettingsConstants.argumentAxisKey = \"argumentAxis\";\r\nChartSettingsConstants.commonAnnotationSettingsKey = \"commonAnnotationSettings\";\r\nChartSettingsConstants.commonAxisSettingsKey = \"commonAxisSettings\";\r\nChartSettingsConstants.commonSeriesSettingsKey = \"commonSeriesSettings\";\r\nChartSettingsConstants.colorKey = \"color\";\r\nChartSettingsConstants.constantLineStyleKey = \"constantLineStyle\";\r\nChartSettingsConstants.customizeLabelKey = \"customizeLabel\";\r\nChartSettingsConstants.customizePointKey = \"customizePoint\";\r\nChartSettingsConstants.customizeTextKey = \"customizeText\";\r\nChartSettingsConstants.customLabelTextKey = \"texts\";\r\nChartSettingsConstants.dataSourceKey = \"dataSource\";\r\nChartSettingsConstants.legendKey = \"legend\";\r\nChartSettingsConstants.seriesKey = \"series\";\r\nChartSettingsConstants.seriesDataKey = \"seriesData\";\r\nChartSettingsConstants.seriesPointsKey = \"points\";\r\nChartSettingsConstants.seriesTemplateKey = \"seriesTemplate\";\r\nChartSettingsConstants.titleKey = \"title\";\r\nChartSettingsConstants.tooltipKey = \"tooltip\";\r\nChartSettingsConstants.visualRangeKey = \"visualRange\";\r\nChartSettingsConstants.defaultLegendHoverMode = \"includePoints\";\r\nChartSettingsConstants.defaultSeriesNameField = \"seriesId\";\r\nChartSettingsConstants.defaultSeriesArgumentField = \"argument\";\r\nChartSettingsConstants.defaultSeriesValueField = \"value\";\r\nChartSettingsConstants.defaultOpenValueField = \"openValue\";\r\nChartSettingsConstants.defaultHighValueField = \"highValue\";\r\nChartSettingsConstants.defaultLowValueField = \"lowValue\";\r\nChartSettingsConstants.defaultCloseValueField = \"closeValue\";\r\nChartSettingsConstants.defaultRangeValue1Field = \"startValue\";\r\nChartSettingsConstants.defaultRangeValue2Field = \"endValue\";\r\nChartSettingsConstants.defaultSizeField = \"size\";\r\nChartSettingsConstants.seriesTypeRangeBar = \"rangebar\";\r\nChartSettingsConstants.seriesTypeRangeArea = \"rangearea\";\r\nChartSettingsConstants.seriesTypeBar = \"bar\";\r\nChartSettingsConstants.seriesTypeDonut = \"donut\";\r\nChartSettingsConstants.defaultAxisLabelOverlappingBehavior = \"rotate\";\r\nChartSettingsConstants.defaultAxisLabelRotationAngle = 45;\r\nChartSettingsConstants.defaultAxisLabelFontOpacity = 0.75;\r\nChartSettingsConstants.defaultAnnotationType = \"text\";\r\nChartSettingsConstants.defaultStripLabelAlignment = \"auto\";\r\nexport class ChartWidgetSettingsConverter {\r\n    convert(serverSettings, needDefaultSettings = false) {\r\n        const settings = needDefaultSettings ? this.createDefaultSettings() : {};\r\n        this.processServerSettings(settings, serverSettings);\r\n        return settings;\r\n    }\r\n    createDefaultSettings() {\r\n        return {\r\n            dataPrepareSettings: { sortingMethod: false },\r\n            adaptiveLayout: { width: 0, height: 0 },\r\n            pathModified: false,\r\n            commonSeriesSettings: this.getDefaultCommonSeriesSettings(),\r\n            commonAnnotationSettings: this.getDefaultAnnotationSettings(),\r\n            legend: {\r\n                visible: false,\r\n                hoverMode: ChartSettingsConstants.defaultLegendHoverMode\r\n            }\r\n        };\r\n    }\r\n    processServerSettings(widgetSettings, serverSettings) {\r\n        if (widgetSettings) {\r\n            this.processSettingsInCommon(widgetSettings, serverSettings);\r\n            this.processSpecialSettings(widgetSettings, serverSettings);\r\n        }\r\n    }\r\n    processSettingsInCommon(widgetSettings, serverSettings) {\r\n        const keysToSkip = this.getSpecialProcessingOptionNames();\r\n        for (const prop in serverSettings) {\r\n            const canProcessProperty = Object.prototype.hasOwnProperty.call(serverSettings, prop) && !keysToSkip.includes(prop);\r\n            if (canProcessProperty)\r\n                this.addOption(widgetSettings, prop, serverSettings[prop]);\r\n        }\r\n    }\r\n    getSpecialProcessingOptionNames() {\r\n        return [\r\n            ChartSettingsConstants.legendKey,\r\n            ChartSettingsConstants.tooltipKey,\r\n            ChartSettingsConstants.seriesTemplateKey,\r\n            ChartSettingsConstants.dataSourceKey,\r\n            ChartSettingsConstants.seriesKey,\r\n            ChartSettingsConstants.seriesDataKey,\r\n            ChartSettingsConstants.titleKey\r\n        ];\r\n    }\r\n    isSeriesDeleted(serverSettings) {\r\n        var _a;\r\n        return ((_a = serverSettings.series) === null || _a === void 0 ? void 0 : _a.length) === 0 && !serverSettings[ChartSettingsConstants.seriesDataKey];\r\n    }\r\n    processSpecialSettings(widgetSettings, serverSettings) {\r\n        var _a, _b;\r\n        this.processSeriesSettings(widgetSettings, serverSettings.series);\r\n        this.processSeriesDataIfNeeded(widgetSettings, serverSettings);\r\n        if ((_a = serverSettings.legend) === null || _a === void 0 ? void 0 : _a.hoverMode) {\r\n            this.addOption(widgetSettings, ChartSettingsConstants.legendKey, {\r\n                hoverMode: (_b = serverSettings.legend) === null || _b === void 0 ? void 0 : _b.hoverMode\r\n            });\r\n        }\r\n        if (serverSettings[ChartSettingsConstants.tooltipKey] !== undefined)\r\n            this.addOption(widgetSettings, ChartSettingsConstants.tooltipKey, getTooltipSettings(serverSettings), true);\r\n    }\r\n    processSeriesDataIfNeeded(widgetSettings, serverSettings) {\r\n        if (this.isSeriesDeleted(serverSettings))\r\n            widgetSettings[ChartSettingsConstants.dataSourceKey] = [];\r\n        else\r\n            this.processSeriesData(widgetSettings, serverSettings[ChartSettingsConstants.seriesDataKey]);\r\n    }\r\n    getDefaultCommonSeriesSettings() {\r\n        return {\r\n            argumentField: ChartSettingsConstants.defaultSeriesArgumentField,\r\n            valueField: ChartSettingsConstants.defaultSeriesValueField\r\n        };\r\n    }\r\n    getDefaultAnnotationSettings() {\r\n        return {\r\n            type: ChartSettingsConstants.defaultAnnotationType\r\n        };\r\n    }\r\n    addOption(widgetSettings, optionName, value, forceRewrite = false) {\r\n        const isObject = typeof value === \"object\";\r\n        const hasOption = widgetSettings[optionName] !== undefined;\r\n        const shouldRewrite = forceRewrite || !hasOption || !isObject || value instanceof Array;\r\n        if (shouldRewrite)\r\n            widgetSettings[optionName] = value;\r\n        else\r\n            Object.assign(widgetSettings[optionName], value);\r\n    }\r\n    processSeriesSettings(widgetSettings, seriesSettings) {\r\n        if (seriesSettings) {\r\n            const seriesTemplate = {\r\n                nameField: ChartSettingsConstants.defaultSeriesNameField,\r\n                customizeSeries: function (valueFromNameField) {\r\n                    return seriesSettings.filter(function (s) { return s.seriesId === valueFromNameField; })[0];\r\n                }\r\n            };\r\n            this.addOption(widgetSettings, ChartSettingsConstants.seriesTemplateKey, seriesTemplate, true);\r\n        }\r\n    }\r\n    processSeriesData(widgetSettings, seriesData) {\r\n        if (!seriesData)\r\n            return;\r\n        const source = [];\r\n        let hasCustomLabel = false;\r\n        let hasCustomPoint = false;\r\n        for (let i = 0; i < seriesData.length; i++) {\r\n            const seriesItem = seriesData[i];\r\n            const seriesId = seriesItem[ChartSettingsConstants.defaultSeriesNameField];\r\n            const points = seriesItem[ChartSettingsConstants.seriesPointsKey];\r\n            points === null || points === void 0 ? void 0 : points.forEach(p => {\r\n                hasCustomLabel || (hasCustomLabel = !!p.pointLabel);\r\n                hasCustomPoint || (hasCustomPoint = !!p.pointAppearance);\r\n                const item = this.createWidgetDataitem(seriesId, p);\r\n                source.push(item);\r\n            });\r\n        }\r\n        widgetSettings[ChartSettingsConstants.dataSourceKey] = source;\r\n        widgetSettings[ChartSettingsConstants.customizeLabelKey] = hasCustomLabel ? (point) => { return this.createWidgetPointLabelSettings(point); } : null;\r\n        widgetSettings[ChartSettingsConstants.customizePointKey] = hasCustomPoint ? (point) => { return point.data.pointAppearance; } : null;\r\n    }\r\n    createWidgetDataitem(seriesName, seriesPointData) {\r\n        const item = Object.assign({}, seriesPointData);\r\n        item[ChartSettingsConstants.defaultSeriesNameField] = seriesName;\r\n        return item;\r\n    }\r\n    createWidgetPointLabelSettings(point) {\r\n        // the returned object must match\r\n        // https://js.devexpress.com/jQuery/Documentation/ApiReference/UI_Components/dxChart/Configuration/commonSeriesSettings/label/\r\n        const pointLabel = { ...point.data.pointLabel };\r\n        const customTexts = pointLabel[ChartSettingsConstants.customLabelTextKey];\r\n        if (customTexts) {\r\n            delete pointLabel[ChartSettingsConstants.customLabelTextKey];\r\n            const series = point.series;\r\n            const isRangeSeries = series.type === ChartSettingsConstants.seriesTypeRangeBar || series.type === ChartSettingsConstants.seriesTypeRangeArea;\r\n            // https://js.devexpress.com/jQuery/Documentation/ApiReference/UI_Components/dxChart/Configuration/commonSeriesSettings/label/#customizeText\r\n            pointLabel[ChartSettingsConstants.customizeTextKey] = (labelPointInfo) => {\r\n                if (isRangeSeries && customTexts.length > 1)\r\n                    return labelPointInfo.value === point.minValue ? customTexts[0] : customTexts[1];\r\n                return customTexts[0];\r\n            };\r\n        }\r\n        return pointLabel;\r\n    }\r\n}\r\nclass CommonChartWidgetSettingConverter extends ChartWidgetSettingsConverter {\r\n    getDefaultCommonSeriesSettings() {\r\n        const settings = {\r\n            openValueField: ChartSettingsConstants.defaultOpenValueField,\r\n            highValueField: ChartSettingsConstants.defaultHighValueField,\r\n            lowValueField: ChartSettingsConstants.defaultLowValueField,\r\n            closeValueField: ChartSettingsConstants.defaultCloseValueField,\r\n            rangeValue1Field: ChartSettingsConstants.defaultRangeValue1Field,\r\n            rangeValue2Field: ChartSettingsConstants.defaultRangeValue2Field,\r\n            sizeField: ChartSettingsConstants.defaultSizeField,\r\n            type: ChartSettingsConstants.seriesTypeBar\r\n        };\r\n        return Object.assign({}, super.getDefaultCommonSeriesSettings(), settings);\r\n    }\r\n}\r\nexport class XYChartWidgetSettingsConverter extends CommonChartWidgetSettingConverter {\r\n    createDefaultSettings() {\r\n        const options = super.createDefaultSettings();\r\n        options.commonAxisSettings = this.getDefaultCommonAxisSettings();\r\n        options.resizePanesOnZoom = true;\r\n        return options;\r\n    }\r\n    processSpecialSettings(widgetSettings, serverSettings) {\r\n        var _a;\r\n        var _b;\r\n        super.processSpecialSettings(widgetSettings, serverSettings);\r\n        if (widgetSettings.argumentAxis)\r\n            (_a = (_b = widgetSettings.argumentAxis).categories) !== null && _a !== void 0 ? _a : (_b.categories = []);\r\n        this.processStripSettings(widgetSettings);\r\n    }\r\n    processStripSettings(widgetSettings) {\r\n        var _a, _b, _c;\r\n        const argumentAxisStrips = (_b = (_a = widgetSettings.argumentAxis) === null || _a === void 0 ? void 0 : _a.strips) !== null && _b !== void 0 ? _b : [];\r\n        const valueAxes = (_c = widgetSettings.valueAxis) !== null && _c !== void 0 ? _c : [];\r\n        const valueAxisStrips = valueAxes.reduce((acc, axis) => {\r\n            var _a;\r\n            return acc.concat((_a = axis.strips) !== null && _a !== void 0 ? _a : []);\r\n        }, []);\r\n        const commonStrips = argumentAxisStrips.concat(valueAxisStrips);\r\n        commonStrips.forEach((strip) => {\r\n            const label = strip.label;\r\n            if ((label === null || label === void 0 ? void 0 : label.horizontalAlignment) === ChartSettingsConstants.defaultStripLabelAlignment)\r\n                label.horizontalAlignment = undefined;\r\n            if ((label === null || label === void 0 ? void 0 : label.verticalAlignment) === ChartSettingsConstants.defaultStripLabelAlignment)\r\n                label.verticalAlignment = undefined;\r\n        });\r\n    }\r\n    getDefaultCommonAxisSettings() {\r\n        const axisColor = window.getComputedStyle(document.body).getPropertyValue(\"color\");\r\n        return {\r\n            label: {\r\n                overlappingBehavior: ChartSettingsConstants.defaultAxisLabelOverlappingBehavior,\r\n                rotationAngle: ChartSettingsConstants.defaultAxisLabelRotationAngle,\r\n                font: {\r\n                    color: axisColor,\r\n                    opacity: ChartSettingsConstants.defaultAxisLabelFontOpacity\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\nexport class PieChartWidgetSettingsConverter extends ChartWidgetSettingsConverter {\r\n    getDefaultCommonSeriesSettings() {\r\n        const base = super.getDefaultCommonSeriesSettings();\r\n        base.type = ChartSettingsConstants.seriesTypeDonut;\r\n        return base;\r\n    }\r\n    createDefaultSettings() {\r\n        const options = super.createDefaultSettings();\r\n        options.innerRadius = 0;\r\n        return options;\r\n    }\r\n}\r\nexport class PolarChartWidgetSettingsConverter extends ChartWidgetSettingsConverter {\r\n    getDefaultCommonSeriesSettings() {\r\n        const base = super.getDefaultCommonSeriesSettings();\r\n        base.type = ChartSettingsConstants.seriesTypeBar;\r\n        return base;\r\n    }\r\n}\r\nexport class RangeSelectorWidgetSettingsConverter extends CommonChartWidgetSettingConverter {\r\n    processSpecialChartSettings(widgetSettings, serverSettings) {\r\n        this.processSeriesSettings(widgetSettings.chart, serverSettings.series);\r\n        this.processSeriesDataIfNeeded(widgetSettings, serverSettings);\r\n    }\r\n    processSeriesSettings(widgetSettings, seriesSettings) {\r\n        super.processSeriesSettings(widgetSettings, seriesSettings);\r\n        delete widgetSettings.series;\r\n    }\r\n    processSeriesDataIfNeeded(widgetSettings, serverSettings) {\r\n        super.processSeriesDataIfNeeded(widgetSettings, serverSettings);\r\n        delete widgetSettings.chart.seriesData;\r\n        delete widgetSettings.customizeLabel;\r\n        delete widgetSettings.customizePoint;\r\n    }\r\n}\r\n"],"names":["ChartCssClasses.ChartToolTip","ChartCssClasses.ChartToolTipPointer","MathUtils","DomUtils"],"mappings":"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"}
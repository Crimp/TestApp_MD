{"version":3,"file":"dx-color-palette-24.2.js","sources":["../../Scripts/editors/colorpalette/dx-color-palette-constants.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-kbd-strategy-types.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-kbd-strategy-base.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-no-color-kbd-strategy.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-row-kbd-strategy.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-kbd-utils.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-group-kbd-strategy.ts","../../Scripts/editors/colorpalette/keyboard-navigation/dx-color-palette-root-kbd-strategy.ts","../../Scripts/editors/colorpalette/dx-color-palette.ts"],"sourcesContent":["var _a;\r\nimport { CssClasses } from \"../../css-classes\";\r\nexport class ColorPaletteConstants {\r\n}\r\n_a = ColorPaletteConstants;\r\nColorPaletteConstants.DefaultCssClass = CssClasses.Prefix + \"-color-palette\";\r\nColorPaletteConstants.SelectedTileCssClass = _a.DefaultCssClass + \"-selected-tile\";\r\nColorPaletteConstants.NoColorContainerCssClass = _a.DefaultCssClass + \"-no-color-container\";\r\nColorPaletteConstants.ColorValueAttribute = \"color-value\";\r\n","export var ColorPaletteElementType;\r\n(function (ColorPaletteElementType) {\r\n    ColorPaletteElementType[ColorPaletteElementType[\"Undefined\"] = 0] = \"Undefined\";\r\n    ColorPaletteElementType[ColorPaletteElementType[\"ColorTile\"] = 1] = \"ColorTile\";\r\n    ColorPaletteElementType[ColorPaletteElementType[\"NoColorTile\"] = 2] = \"NoColorTile\";\r\n})(ColorPaletteElementType || (ColorPaletteElementType = {}));\r\nexport var ColorPaletteSelectType;\r\n(function (ColorPaletteSelectType) {\r\n    ColorPaletteSelectType[ColorPaletteSelectType[\"First\"] = 0] = \"First\";\r\n    ColorPaletteSelectType[ColorPaletteSelectType[\"LastSelected\"] = 1] = \"LastSelected\";\r\n    ColorPaletteSelectType[ColorPaletteSelectType[\"Last\"] = 2] = \"Last\";\r\n})(ColorPaletteSelectType || (ColorPaletteSelectType = {}));\r\n","import { KeyboardNavigationStrategy } from \"../../../common/keyboard-navigation/keyboard-navigation-strategy\";\r\nimport { FocusUtils } from \"../../../common/keyboard-navigation/keyboard-navigation-utils\";\r\nimport { ColorPaletteElementType } from \"./dx-color-palette-kbd-strategy-types\";\r\nexport class ColorPaletteKbdStrategyBase extends KeyboardNavigationStrategy {\r\n    constructor(navigator, rootStrategy, targetElement) {\r\n        super(navigator, targetElement);\r\n        this.rootStrategy = rootStrategy;\r\n    }\r\n    getItemStrategy(index) {\r\n        return super.getItemStrategy(index);\r\n    }\r\n    getSelectedItemStrategy() {\r\n        return super.getSelectedItemStrategy();\r\n    }\r\n    getShortcutContext() {\r\n        return {\r\n            ElementType: this.getElementType(),\r\n            Value: this.getElementValue()\r\n        };\r\n    }\r\n    selectItem(index) {\r\n        this.resetFocusableState();\r\n        super.selectItem(index);\r\n    }\r\n    resetFocusableState() {\r\n        const element = this.findLastSelectedStrategy().selectedItemElement;\r\n        if (element)\r\n            FocusUtils.removeTabIndex(element);\r\n    }\r\n    getElementType() {\r\n        return ColorPaletteElementType.Undefined;\r\n    }\r\n    getElementValue() {\r\n        return null;\r\n    }\r\n    move(forward, vertical, loop = true) {\r\n        const nextIndex = this.selectedItemIndex + (forward ? 1 : -1);\r\n        if (!this.isIndexWithinBoundaries(nextIndex))\r\n            return false;\r\n        if (loop) {\r\n            const nextStrategy = this.getItemStrategy(nextIndex);\r\n            if (!nextStrategy || !this.canMove(nextStrategy, forward, vertical))\r\n                return false;\r\n            this.setSelectedItemIndex(nextStrategy, forward, vertical);\r\n        }\r\n        if (forward)\r\n            this.moveToNextItem();\r\n        else\r\n            this.moveToPrevItem();\r\n        return true;\r\n    }\r\n    canMove(strategy, forward, vertical) {\r\n        return true;\r\n    }\r\n}\r\n","import { KeyCode, KeyUtils } from \"@devexpress/utils/lib/utils/key\";\r\nimport { ColorPaletteKbdStrategyBase } from \"./dx-color-palette-kbd-strategy-base\";\r\nimport { ColorPaletteElementType } from \"./dx-color-palette-kbd-strategy-types\";\r\nexport class ColorPaletteNoColorKbdStrategy extends ColorPaletteKbdStrategyBase {\r\n    constructor(navigator, rootStrategy, targetElement) {\r\n        super(navigator, rootStrategy, targetElement);\r\n    }\r\n    handleKeyDown(evt) {\r\n        switch (KeyUtils.getEventKeyCode(evt)) {\r\n            case KeyCode.Left:\r\n            case KeyCode.Right:\r\n                return true;\r\n            case KeyCode.Enter:\r\n            case KeyCode.Space:\r\n                this.performShortcutEvent(evt);\r\n                return true;\r\n        }\r\n        return super.handleKeyDown(evt);\r\n    }\r\n    setSelectedItemIndex(strategy, forward, vertical) { }\r\n    getElementType() {\r\n        return ColorPaletteElementType.NoColorTile;\r\n    }\r\n}\r\n","import { KeyCode, KeyUtils } from \"@devexpress/utils/lib/utils/key\";\r\nimport { ColorPaletteKbdStrategyBase } from \"./dx-color-palette-kbd-strategy-base\";\r\nimport { ColorPaletteElementType, ColorPaletteSelectType } from \"./dx-color-palette-kbd-strategy-types\";\r\nimport { ColorPaletteConstants } from \"../dx-color-palette-constants\";\r\nexport class ColorPaletteRowKbdStrategy extends ColorPaletteKbdStrategyBase {\r\n    constructor(navigator, rootStrategy, targetElement) {\r\n        super(navigator, rootStrategy, targetElement);\r\n    }\r\n    handleKeyDown(evt) {\r\n        switch (KeyUtils.getEventKeyCode(evt)) {\r\n            case KeyCode.Left:\r\n                return this.move(false, false, false);\r\n            case KeyCode.Right:\r\n                return this.move(true, false, false);\r\n            case KeyCode.Home:\r\n                this.moveToFirstItem();\r\n                return true;\r\n            case KeyCode.End:\r\n                this.moveToLastItem();\r\n                return true;\r\n            case (KeyCode.Enter):\r\n            case (KeyCode.Space):\r\n                this.performShortcutEvent(evt);\r\n                return true;\r\n        }\r\n        return super.handleKeyDown(evt);\r\n    }\r\n    focusSelectedItem() {\r\n        var _a;\r\n        super.focusSelectedItem();\r\n        (_a = this.rootStrategy) === null || _a === void 0 ? void 0 : _a.setLastColumnIndex(this.selectedItemIndex);\r\n    }\r\n    setRowSelectedItemIndex(x) {\r\n        var _a, _b;\r\n        switch (x) {\r\n            case ColorPaletteSelectType.First:\r\n                this.selectedItemIndex = 0;\r\n                break;\r\n            case ColorPaletteSelectType.LastSelected:\r\n                this.selectedItemIndex = (_b = (_a = this.rootStrategy) === null || _a === void 0 ? void 0 : _a.getLastColumnIndex()) !== null && _b !== void 0 ? _b : 0;\r\n                break;\r\n            case ColorPaletteSelectType.Last:\r\n                this.selectedItemIndex = this.itemCount - 1;\r\n                break;\r\n        }\r\n    }\r\n    findAndSetRowSelectedTile() {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            const item = this.getItem(i);\r\n            if (item && item.classList.contains(ColorPaletteConstants.SelectedTileCssClass)) {\r\n                this.selectedItemIndex = i;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    queryItems() {\r\n        return this.queryItemsBySelector(\"td > div\");\r\n    }\r\n    getElementType() {\r\n        return ColorPaletteElementType.ColorTile;\r\n    }\r\n    getElementValue() {\r\n        return this.selectedItemElement.getAttribute(ColorPaletteConstants.ColorValueAttribute);\r\n    }\r\n    setSelectedItemIndex(strategy, forward, vertical) { }\r\n}\r\n","import { ColorPaletteNoColorKbdStrategy } from \"./dx-color-palette-no-color-kbd-strategy\";\r\nimport { ColorPaletteGroupKbdStrategy } from \"./dx-color-palette-group-kbd-strategy\";\r\nimport { ColorPaletteRowKbdStrategy } from \"./dx-color-palette-row-kbd-strategy\";\r\nexport class ColorPaletteKbdStrategyUtils {\r\n    static isGroupStrategy(strategy) {\r\n        return strategy instanceof ColorPaletteGroupKbdStrategy;\r\n    }\r\n    static isRowStrategy(strategy) {\r\n        return strategy instanceof ColorPaletteRowKbdStrategy;\r\n    }\r\n    static isButtonStrategy(strategy) {\r\n        return strategy instanceof ColorPaletteNoColorKbdStrategy;\r\n    }\r\n}\r\n","import { KeyCode, KeyUtils } from \"@devexpress/utils/lib/utils/key\";\r\nimport { ColorPaletteKbdStrategyBase } from \"./dx-color-palette-kbd-strategy-base\";\r\nimport { ColorPaletteRowKbdStrategy } from \"./dx-color-palette-row-kbd-strategy\";\r\nimport { ColorPaletteKbdStrategyUtils } from \"./dx-color-palette-kbd-utils\";\r\nimport { ColorPaletteSelectType } from \"./dx-color-palette-kbd-strategy-types\";\r\nexport class ColorPaletteGroupKbdStrategy extends ColorPaletteKbdStrategyBase {\r\n    constructor(navigator, rootStrategy, targetElement) {\r\n        super(navigator, rootStrategy, targetElement);\r\n    }\r\n    queryItems() {\r\n        return this.queryItemsBySelector(\"tbody > tr\");\r\n    }\r\n    createItemStrategy(itemElement) {\r\n        if (itemElement.matches(\"tr\"))\r\n            return new ColorPaletteRowKbdStrategy(this.navigator, this.rootStrategy, itemElement);\r\n        throw new Error(\"Color palete kbd strategy not implemented \");\r\n    }\r\n    handleKeyDown(evt) {\r\n        switch (KeyUtils.getEventKeyCode(evt)) {\r\n            case KeyCode.Left:\r\n                return this.move(false, false);\r\n            case KeyCode.Up:\r\n                return this.move(false, true);\r\n            case KeyCode.Right:\r\n                return this.move(true, false);\r\n            case KeyCode.Down:\r\n                return this.move(true, true);\r\n        }\r\n        return super.handleKeyDown(evt);\r\n    }\r\n    getShortcutContext() {\r\n        return {};\r\n    }\r\n    setGroupSelectedItemIndex(x, y) {\r\n        this.selectedItemIndex = y === ColorPaletteSelectType.First ? 0 : this.itemCount - 1;\r\n        const strategy = this.getItemStrategy(this.selectedItemIndex);\r\n        if (ColorPaletteKbdStrategyUtils.isRowStrategy(strategy))\r\n            strategy.setRowSelectedItemIndex(x);\r\n    }\r\n    findAndSetGroupSelectedTile() {\r\n        for (let i = 0; i < this.itemCount; i++) {\r\n            const strategy = this.getItemStrategy(i);\r\n            if (ColorPaletteKbdStrategyUtils.isRowStrategy(strategy) && strategy.findAndSetRowSelectedTile()) {\r\n                this.selectedItemIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    setSelectedItemIndex(strategy, forward, vertical) {\r\n        if (ColorPaletteKbdStrategyUtils.isRowStrategy(strategy)) {\r\n            if (vertical)\r\n                strategy.setRowSelectedItemIndex(ColorPaletteSelectType.LastSelected);\r\n            else\r\n                strategy.setRowSelectedItemIndex(forward ? ColorPaletteSelectType.First : ColorPaletteSelectType.Last);\r\n        }\r\n    }\r\n}\r\n","import { KeyCode, KeyUtils } from \"@devexpress/utils/lib/utils/key\";\r\nimport { ColorPaletteConstants } from \"../dx-color-palette-constants\";\r\nimport { ColorPaletteKbdStrategyBase } from \"./dx-color-palette-kbd-strategy-base\";\r\nimport { ColorPaletteNoColorKbdStrategy } from \"./dx-color-palette-no-color-kbd-strategy\";\r\nimport { ColorPaletteGroupKbdStrategy } from \"./dx-color-palette-group-kbd-strategy\";\r\nimport { ColorPaletteKbdStrategyUtils } from \"./dx-color-palette-kbd-utils\";\r\nimport { ColorPaletteSelectType } from \"./dx-color-palette-kbd-strategy-types\";\r\nexport class ColorPaletteRootKbdStrategy extends ColorPaletteKbdStrategyBase {\r\n    constructor(navigator, colorPalette) {\r\n        super(navigator, null, colorPalette);\r\n        this.lastColumnIndex = 0;\r\n    }\r\n    queryItems() {\r\n        return new Array(...this.queryItemsBySelector(\"& > table\"), ...this.queryItemsBySelector(`& > div.${ColorPaletteConstants.NoColorContainerCssClass}`));\r\n    }\r\n    createItemStrategy(itemElement) {\r\n        if (itemElement.matches(\"table\"))\r\n            return new ColorPaletteGroupKbdStrategy(this.navigator, this, itemElement);\r\n        if (itemElement.matches(`div.${ColorPaletteConstants.NoColorContainerCssClass}`))\r\n            return new ColorPaletteNoColorKbdStrategy(this.navigator, this, itemElement);\r\n        throw new Error(\"Color palete kbd strategy not implemented \");\r\n    }\r\n    handleKeyDown(evt) {\r\n        switch (KeyUtils.getEventKeyCode(evt)) {\r\n            case KeyCode.Left:\r\n                return this.move(false, false);\r\n            case KeyCode.Up:\r\n                return this.move(false, true);\r\n            case KeyCode.Right:\r\n                return this.move(true, false);\r\n            case KeyCode.Down:\r\n                return this.move(true, true);\r\n            case KeyCode.Tab:\r\n                return this.handleTab(evt);\r\n        }\r\n        return super.handleKeyDown(evt);\r\n    }\r\n    getShortcutContext() {\r\n        return {};\r\n    }\r\n    setLastColumnIndex(index) {\r\n        this.lastColumnIndex = index;\r\n    }\r\n    getLastColumnIndex() {\r\n        return this.lastColumnIndex;\r\n    }\r\n    setSelectedItemIndex(strategy, forward, vertical) {\r\n        if (ColorPaletteKbdStrategyUtils.isGroupStrategy(strategy)) {\r\n            if (forward) {\r\n                if (vertical)\r\n                    strategy.setGroupSelectedItemIndex(ColorPaletteSelectType.LastSelected, ColorPaletteSelectType.First);\r\n                else\r\n                    strategy.setGroupSelectedItemIndex(ColorPaletteSelectType.First, ColorPaletteSelectType.First);\r\n            }\r\n            else {\r\n                if (vertical)\r\n                    strategy.setGroupSelectedItemIndex(ColorPaletteSelectType.LastSelected, ColorPaletteSelectType.Last);\r\n                else\r\n                    strategy.setGroupSelectedItemIndex(ColorPaletteSelectType.Last, ColorPaletteSelectType.Last);\r\n            }\r\n        }\r\n    }\r\n    canMove(strategy, forward, vertical) {\r\n        return !forward || vertical || !ColorPaletteKbdStrategyUtils.isButtonStrategy(strategy);\r\n    }\r\n    handleTab(evt) {\r\n        const nextIndex = this.selectedItemIndex + (evt.shiftKey ? -1 : 1);\r\n        if (this.isIndexWithinBoundaries(nextIndex)) {\r\n            const nextStrategy = this.getItemStrategy(nextIndex);\r\n            if (ColorPaletteKbdStrategyUtils.isGroupStrategy(nextStrategy))\r\n                nextStrategy.findAndSetGroupSelectedTile();\r\n            this.selectItem(nextIndex);\r\n            return true;\r\n        }\r\n        if (evt.shiftKey) {\r\n            this.leaveBackward();\r\n            return true;\r\n        }\r\n        return super.handleKeyDown(evt);\r\n    }\r\n}\r\n","import { colorPaletteTagName } from \"../constants\";\r\nimport { DxKeyboardNavigatorTagName } from \"../../common/keyboard-navigation/dx-keyboard-navigator\";\r\nimport SingleSlotElementBase from \"../../common/single-slot-element-base\";\r\nimport { ColorPaletteRootKbdStrategy } from \"./keyboard-navigation/dx-color-palette-root-kbd-strategy\";\r\nexport class DxColorPalette extends SingleSlotElementBase {\r\n    constructor() {\r\n        super();\r\n    }\r\n    contentChanged() {\r\n        super.contentChanged();\r\n        this.initializeKeyboardNavigator();\r\n    }\r\n    disconnectedCallback() {\r\n        delete this.keyboardNavigator;\r\n        super.disconnectedCallback();\r\n    }\r\n    initializeKeyboardNavigator() {\r\n        this.keyboardNavigator = this.querySelector(DxKeyboardNavigatorTagName);\r\n        if (this.keyboardNavigator && !this.keyboardNavigator.initialized)\r\n            this.keyboardNavigator.initialize(this, new ColorPaletteRootKbdStrategy(this.getKeyboardNavigator(), this));\r\n    }\r\n    getKeyboardNavigator() {\r\n        return this.keyboardNavigator;\r\n    }\r\n}\r\ncustomElements.define(colorPaletteTagName, DxColorPalette);\r\nfunction loadModule() { }\r\nexport default { loadModule };\r\n"],"names":["KeyUtils","KeyCode"],"mappings":"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"}
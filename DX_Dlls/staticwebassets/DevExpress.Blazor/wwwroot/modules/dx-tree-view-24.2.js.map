{"version":3,"file":"dx-tree-view-24.2.js","sources":["../../Scripts/navigation/treeview/constants.ts","../../Scripts/navigation/treeview/keyboard-navigation/treeview-item-kbd-strategy.ts","../../Scripts/navigation/treeview/keyboard-navigation/treeview-items-container-kbd-strategy.ts","../../Scripts/navigation/treeview/keyboard-navigation/treeview-check-all-kbd-strategy.ts","../../Scripts/navigation/treeview/keyboard-navigation/treeview-root-kbd-strategy.ts","../../Scripts/navigation/treeview/treeview-base.ts","../../Scripts/components/dx-tree-view.ts"],"sourcesContent":["var _a;\r\nexport class TreeViewCssClasses {\r\n}\r\n_a = TreeViewCssClasses;\r\nTreeViewCssClasses.prefix = \"dxbl\";\r\nTreeViewCssClasses.root = `${_a.prefix}-treeview`;\r\nTreeViewCssClasses.templatedItem = `${_a.root}-tmpl`;\r\nTreeViewCssClasses.item = `${_a.root}-item`;\r\nTreeViewCssClasses.itemsContainer = `${_a.root}-items-container`;\r\nTreeViewCssClasses.itemContent = `${_a.item}-content`;\r\nTreeViewCssClasses.itemContainer = `${_a.item}-container`;\r\nTreeViewCssClasses.checkAllBox = `${_a.root}-checkbox-check-all`;\r\nTreeViewCssClasses.filterPanel = `${_a.prefix}-navigation-filter`;\r\nexport class TreeViewConstants {\r\n}\r\nTreeViewConstants.parentId = \"parent-id\";\r\nTreeViewConstants.notTemplatedItemSelector = `li > .${TreeViewCssClasses.itemContent}`;\r\nTreeViewConstants.templatedItemSelector = `li > .${TreeViewCssClasses.templatedItem}`;\r\n","import { KeyboardNavigationStrategy } from \"../../../common/keyboard-navigation/keyboard-navigation-strategy\";\r\nimport { TreeViewCssClasses } from \"../constants\";\r\nconst itemContentSelector = `:scope > .${TreeViewCssClasses.itemContainer}, :scope.${TreeViewCssClasses.templatedItem}`;\r\nexport class DxTreeViewItemKeyboardStrategy extends KeyboardNavigationStrategy {\r\n    constructor(treeView, targetElement) {\r\n        super(treeView.getKeyBoardNavigator(), targetElement);\r\n        this._treeView = treeView;\r\n    }\r\n    canSwitchToNestedContentMode() {\r\n        return true;\r\n    }\r\n    queryItems() {\r\n        return this.queryItemsBySelector(itemContentSelector);\r\n    }\r\n}\r\n","import { KeyboardNavigationStrategy } from \"../../../common/keyboard-navigation/keyboard-navigation-strategy\";\r\nimport { KeyCode, KeyUtils } from \"@devexpress/utils/lib/utils/key\";\r\nimport { NavigationAction, NavigationActionRequestEvent } from \"../events\";\r\nimport { A11y } from \"../../../constants\";\r\nimport { TreeViewConstants, TreeViewCssClasses } from \"../constants\";\r\nimport { DxTreeViewItemKeyboardStrategy } from \"./treeview-item-kbd-strategy\";\r\nimport { FocusHiddenAttributeName } from \"../../../focus-utils\";\r\nconst TreeViewItemSelector = `:scope ${TreeViewConstants.templatedItemSelector}, :scope ${TreeViewConstants.notTemplatedItemSelector}`;\r\nexport class TreeViewItemsContainerKbdStrategy extends KeyboardNavigationStrategy {\r\n    activate() {\r\n        if (!this._activatedByClick && this._focusedFromOutside && this._treeView.getAttribute(FocusHiddenAttributeName) == null)\r\n            this.selectedItemIndex = this.navigator.focusedFromForwardElement ? this.itemCount - 1 : 0;\r\n        this._focusedFromOutside = false;\r\n        this._activatedByClick = false;\r\n        super.activate();\r\n    }\r\n    onActiveStateChanged(_isActive) {\r\n        this._focusedFromOutside = _isActive;\r\n        super.onActiveStateChanged(_isActive);\r\n    }\r\n    onPointerDown(evt) {\r\n        this._activatedByClick = true;\r\n    }\r\n    constructor(treeView, targetElement) {\r\n        super(treeView.getKeyBoardNavigator(), targetElement);\r\n        this._focusedFromOutside = true;\r\n        this.boundOnPointerDownHandler = this.onPointerDown.bind(this);\r\n        this._activatedByClick = true;\r\n        this._treeView = treeView;\r\n        this.targetElement.addEventListener(\"pointerdown\", this.boundOnPointerDownHandler);\r\n    }\r\n    queryItems() {\r\n        return this.queryItemsBySelector(TreeViewItemSelector);\r\n    }\r\n    createItemStrategy(itemElement) {\r\n        return new DxTreeViewItemKeyboardStrategy(this._treeView, itemElement);\r\n    }\r\n    getFocusableContainer() {\r\n        return this.isTemplatedItem() ? this.selectedItemElement : this.selectedItemElement.querySelector(`:scope > .${TreeViewCssClasses.itemContainer}`);\r\n    }\r\n    selectedItemExpandedState() {\r\n        const element = this.getFocusableContainer();\r\n        const expandedState = element.getAttribute(A11y.ariaExpanded);\r\n        return expandedState === null ? null : expandedState === \"true\";\r\n    }\r\n    selectedItemIsCheckable() {\r\n        const element = this.getFocusableContainer();\r\n        return element.hasAttribute(A11y.ariaChecked);\r\n    }\r\n    selectedItemIsParentNode() {\r\n        const element = this.getFocusableContainer();\r\n        return element.getAttribute(A11y.ariaLevel) === \"1\";\r\n    }\r\n    selectedItemIsEndNode() {\r\n        const element = this.getFocusableContainer();\r\n        return element.getAttribute(A11y.ariaExpanded) === null;\r\n    }\r\n    getSelectedItemParent() {\r\n        const element = this.getFocusableContainer();\r\n        const container = this.isTemplatedItem() ? element.parentElement : element;\r\n        const parentId = container === null || container === void 0 ? void 0 : container.getAttribute(TreeViewConstants.parentId);\r\n        const parent = document.querySelector(`#${parentId}`);\r\n        return this.isTemplatedItem() ? parent.firstElementChild : parent.parentElement;\r\n    }\r\n    isTemplatedItem() {\r\n        return this.selectedItemElement.classList.contains(TreeViewCssClasses.templatedItem);\r\n    }\r\n    handleKeyDown(evt) {\r\n        super.handleKeyDown(evt);\r\n        if (!this.nestedContentSelected)\r\n            return this.handleKeyDownCore(evt);\r\n        return false;\r\n    }\r\n    handleKeyDownCore(evt) {\r\n        switch (KeyUtils.getEventKeyCode(evt)) {\r\n            case KeyCode.Enter:\r\n                this.raiseClickEvent(this.getFocusableContainer(), evt.ctrlKey, evt.metaKey, evt.shiftKey);\r\n                return true;\r\n            case KeyCode.Space:\r\n                this.handleSpace();\r\n                return true;\r\n            case KeyCode.Up:\r\n                this.moveToPrevItem(true);\r\n                return true;\r\n            case KeyCode.Down:\r\n                this.moveToNextItem(true);\r\n                return true;\r\n            case KeyCode.Left:\r\n                if (this.selectedItemExpandedState() === true)\r\n                    this.performAction(NavigationAction.Collapse);\r\n                else {\r\n                    if (!this.selectedItemIsParentNode())\r\n                        this.moveToParent();\r\n                }\r\n                return true;\r\n            case KeyCode.Right:\r\n                if (this.selectedItemExpandedState() === false)\r\n                    this.performAction(NavigationAction.Expand);\r\n                else {\r\n                    if (!this.selectedItemIsEndNode())\r\n                        this.moveToFirstChild();\r\n                }\r\n                return true;\r\n            case KeyCode.Home:\r\n                this.selectItem(0);\r\n                return true;\r\n            case KeyCode.End:\r\n                this.selectItem(this.itemCount - 1);\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    onDispose() {\r\n        this.targetElement.removeEventListener(\"pointerdown\", this.boundOnPointerDownHandler);\r\n    }\r\n    moveToParent() {\r\n        const parent = this.getSelectedItemParent();\r\n        const parentIndex = this.items.indexOf(parent);\r\n        this.selectItem(parentIndex);\r\n    }\r\n    moveToFirstChild() {\r\n        this.moveToNextItem(false);\r\n    }\r\n    handleSpace() {\r\n        this.handleChecking();\r\n    }\r\n    selectedItemIsSelectable() {\r\n        return this.getFocusableContainer().getAttribute(A11y.ariaSelected) !== null;\r\n    }\r\n    handleChecking() {\r\n        if (this.selectedItemIsCheckable() || this.selectedItemIsSelectable())\r\n            this.performAction(NavigationAction.Check);\r\n    }\r\n    performAction(action) {\r\n        const element = this.getFocusableContainer();\r\n        element.dispatchEvent(new NavigationActionRequestEvent(action));\r\n    }\r\n}\r\n","import { KeyboardNavigationStrategy } from \"../../../common/keyboard-navigation/keyboard-navigation-strategy\";\r\nexport class TreeViewCheckAllKbdStrategy extends KeyboardNavigationStrategy {\r\n    constructor(treeView, targetElement) {\r\n        super(treeView.getKeyBoardNavigator(), targetElement);\r\n        this._treeView = treeView;\r\n    }\r\n    queryItems() {\r\n        return this.queryItemsBySelector(\"input\");\r\n    }\r\n}\r\n","import { KeyboardNavigationStrategy } from \"../../../common/keyboard-navigation/keyboard-navigation-strategy\";\r\nimport { KeyCode, KeyUtils } from \"@devexpress/utils/lib/utils/key\";\r\nimport { TreeViewItemsContainerKbdStrategy } from \"./treeview-items-container-kbd-strategy\";\r\nimport { addFocusHiddenAttribute, removeFocusHiddenAttribute } from \"../../../focus-utils\";\r\nimport { TreeViewCheckAllKbdStrategy } from \"./treeview-check-all-kbd-strategy\";\r\nimport { TreeViewCssClasses } from \"../constants\";\r\nexport class TreeViewRootKbdStrategy extends KeyboardNavigationStrategy {\r\n    get activatedByCheckAllClick() {\r\n        return this._activatedByCheckAllClick;\r\n    }\r\n    set activatedByCheckAllClick(value) {\r\n        this._activatedByCheckAllClick = value;\r\n    }\r\n    constructor(treeView) {\r\n        super(treeView.getKeyBoardNavigator(), treeView);\r\n        this.boundOnPointerDownHandler = this.onPointerDown.bind(this);\r\n        this._activatedByCheckAllClick = false;\r\n        this._checkAllBox = null;\r\n        this._treeView = treeView;\r\n    }\r\n    onDispose() {\r\n        if (this._checkAllBox) {\r\n            const label = this._checkAllBox.querySelector(\"label\");\r\n            label.removeEventListener(\"pointerdown\", this.boundOnPointerDownHandler);\r\n        }\r\n    }\r\n    activate() {\r\n        super.activate();\r\n        if (!this.activatedByCheckAllClick) {\r\n            if (this._checkAllBox)\r\n                removeFocusHiddenAttribute(this._checkAllBox);\r\n        }\r\n    }\r\n    onActiveStateChanged(_isActive) {\r\n        super.onActiveStateChanged(_isActive);\r\n        if (!_isActive)\r\n            this.activatedByCheckAllClick = false;\r\n    }\r\n    onPointerDown(evt) {\r\n        if (this._checkAllBox) {\r\n            addFocusHiddenAttribute(this._checkAllBox);\r\n            this.activatedByCheckAllClick = true;\r\n        }\r\n    }\r\n    queryItems() {\r\n        return this.queryItemsBySelector(`:scope .${TreeViewCssClasses.checkAllBox}, :scope .${TreeViewCssClasses.filterPanel} input, :scope .${TreeViewCssClasses.itemsContainer}[role=tree]`);\r\n    }\r\n    isItemsContainer(element) {\r\n        return element.classList.contains(TreeViewCssClasses.itemsContainer);\r\n    }\r\n    isCheckAllBox(element) {\r\n        return element.classList.contains(TreeViewCssClasses.checkAllBox);\r\n    }\r\n    createItemStrategy(itemElement) {\r\n        if (this.isItemsContainer(itemElement))\r\n            return new TreeViewItemsContainerKbdStrategy(this._treeView, itemElement);\r\n        if (this.isCheckAllBox(itemElement)) {\r\n            this._checkAllBox = itemElement;\r\n            const label = this._checkAllBox.querySelector(\"label\");\r\n            label.addEventListener(\"pointerdown\", this.boundOnPointerDownHandler);\r\n            return new TreeViewCheckAllKbdStrategy(this._treeView, itemElement);\r\n        }\r\n        return null;\r\n    }\r\n    handleKeyDown(evt) {\r\n        super.handleKeyDown(evt);\r\n        return this.handleKeyDownCore(evt);\r\n    }\r\n    handleKeyDownCore(evt) {\r\n        switch (KeyUtils.getEventKeyCode(evt)) {\r\n            case KeyCode.Tab:\r\n                if (evt.shiftKey) {\r\n                    if (this.firstItemSelected)\r\n                        this.leaveBackward();\r\n                    else\r\n                        this.moveToPrevItem(false);\r\n                }\r\n                else {\r\n                    if (this.lastItemSelected)\r\n                        this.leaveForward();\r\n                    else\r\n                        this.moveToNextItem(false);\r\n                }\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n}\r\n","import { __decorate } from \"tslib\";\r\nimport { property } from \"lit/decorators.js\";\r\nimport SingleSlotElementBase from \"../../common/single-slot-element-base\";\r\nimport { DxKeyboardNavigatorTagName } from \"../../common/keyboard-navigation/dx-keyboard-navigator\";\r\nimport { TreeViewRootKbdStrategy } from \"./keyboard-navigation/treeview-root-kbd-strategy\";\r\nexport var CheckMode;\r\n(function (CheckMode) {\r\n    CheckMode[\"Disabled\"] = \"Disabled\";\r\n    CheckMode[\"Multiple\"] = \"Multiple\";\r\n    CheckMode[\"Recursive\"] = \"Recursive\";\r\n})(CheckMode || (CheckMode = {}));\r\nexport class TreeviewBase extends SingleSlotElementBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._keyboardNavigator = null;\r\n        this.checkMode = CheckMode.Disabled;\r\n    }\r\n    connectedOrContentChanged() {\r\n        this._keyboardNavigator = this.querySelector(`:scope > ${DxKeyboardNavigatorTagName}`);\r\n        if (this._keyboardNavigator)\r\n            this.initializeKeyboardNavigation();\r\n        super.connectedOrContentChanged();\r\n    }\r\n    initializeKeyboardNavigation() {\r\n        if (this._keyboardNavigator && \"initialized\" in this._keyboardNavigator && !this._keyboardNavigator.initialized)\r\n            this._keyboardNavigator.initialize(this, new TreeViewRootKbdStrategy(this));\r\n    }\r\n    disconnectedCallback() {\r\n        var _a;\r\n        (_a = this._keyboardNavigator) === null || _a === void 0 ? void 0 : _a.disposeComponent();\r\n    }\r\n    getKeyBoardNavigator() {\r\n        return this._keyboardNavigator;\r\n    }\r\n}\r\n__decorate([\r\n    property({ type: CheckMode, attribute: \"check-mode\" })\r\n], TreeviewBase.prototype, \"checkMode\", void 0);\r\n","import { __decorate } from \"tslib\";\r\nimport { customElement } from \"lit/decorators.js\";\r\nimport { TreeviewBase } from \"../navigation/treeview/treeview-base\";\r\nexport const TreeViewTagName = \"dxbl-treeview\";\r\nlet DxTreeView = class DxTreeView extends TreeviewBase {\r\n};\r\nDxTreeView = __decorate([\r\n    customElement(TreeViewTagName)\r\n], DxTreeView);\r\nexport { DxTreeView };\r\n"],"names":["KeyUtils","KeyCode","property","customElement"],"mappings":"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"}